{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortField","goodsFromServer","App","useState","Default","sortField","setSortField","reversed","setReversed","visibleGoods","goods","sortedGoods","sort","good1","good2","Aplhabet","localeCompare","Length","length","reverse","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,qBAAAA,I,uBAAAA,I,oBAAAA,M,KA8BE,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAAUI,SAArD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACMC,EA3BR,SAA0BC,EAA1B,GAC8C,IADDL,EACA,EADAA,UAAWE,EACX,EADWA,SAElDI,EAAW,YAAOD,GAmBtB,OAjBIL,GACFM,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQT,GACN,KAAKL,EAAUe,SACb,OAAOF,EAAMG,cAAcF,GAC7B,KAAKd,EAAUiB,OACb,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXX,IACFI,EAAcA,EAAYQ,WAGrBR,EAMcS,CAAiBnB,EACpC,CAAEI,YAAWE,aAMf,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMhB,EAAaN,EAAUe,WACtCQ,KAAK,SACLF,UAAWG,IAAG,iBACZ,CAAE,WAAYnB,IAAcL,EAAUe,WAJ1C,iCASA,wBACEO,QAAS,kBAAMhB,EAAaN,EAAUiB,SACtCM,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WAAYnB,IAAcL,EAAUiB,SAJ1C,4BASA,wBACEK,QAAS,kBAAMd,GAAY,SAAAW,GAAO,OAAKA,MACvCI,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CAAE,YAAajB,IAHpD,sBAQEF,GAAaE,IACb,wBACEe,QApCU,WAClBhB,EAAaN,EAAUI,SACvBI,GAAY,IAmCJe,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGZ,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCjGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8e06b215.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortField {\n  Default,\n  Aplhabet,\n  Length,\n}\n\nfunction getPreparedGoods(goods: string[], { sortField, reversed }:\n{ sortField: SortField, reversed: boolean }) {\n  let sortedGoods = [...goods];\n\n  if (sortField) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortField.Aplhabet:\n          return good1.localeCompare(good2);\n        case SortField.Length:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    sortedGoods = sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortField.Default);\n  const [reversed, setReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortField, reversed });\n  const resetButton = () => {\n    setSortField(SortField.Default);\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SortField.Aplhabet)}\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SortField.Aplhabet })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SortField.Length)}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SortField.Length })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReversed(reverse => !reverse)}\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !reversed })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversed) && (\n          <button\n            onClick={resetButton}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}